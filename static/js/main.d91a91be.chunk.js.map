{"version":3,"sources":["picture/upload-photo.jpg","js/layout/sidebar.js","js/utils/API.js","js/user_management/create.js","js/user_management/view.js","js/layout/content.js","js/App.js","js/login_page/login.js","js/nopage/nopage.js","serviceWorker.js","js/utils/private_route.js","js/utils/public_route.js","index.js","picture/logo.PNG"],"names":["module","exports","Sidebar","Grid","centered","Row","className","Column","width","src","logo","List","relaxed","Item","icon","content","urlAPI","getUser","userStr","localStorage","getItem","JSON","parse","getToken","CreateUser","props","handleChangeRole","e","value","persist","setState","jobrole","handleChangeContact","corporate","urlparameter","window","location","search","params","URLSearchParams","console","log","get","state","code","contactListAPI","contactList","get_done","get_done_user","previous_uid","email","fullname","is_active","dataUser","roleList","key","text","handleChange","bind","handleSubmit","axios","headers","Authorization","then","json","data","Data","map","contact","UID","push","Title","setTimeout","this","response","Email","FullName","IsAdministrator","IsActive","inputDataUser","OrganizationUID","Username","NickName","substring","Picture","Status","IsOnline","IsIdle","IsOnCall","LastOnlineAt","pathname","post","put","replace","event","target","id","GetContact","GetUserData","Segment","floated","Header","as","Form","onSubmit","Field","placeholder","onChange","Checkbox","toggle","Dropdown","fluid","selection","options","checked","Button","type","photos","React","Component","Container","handleClick","userUId","delete","reload","handlechange","search_item","document","getElementById","componentDidMount","user_list","arah_sort","column_sort","handleSort","user_keyword","res","sortKey","sort","a","b","localeCompare","reverse","Input","to","Table","HeaderCell","onClick","columns","Icon","name","Body","user","Cell","color","Content","Application","handleLogout","removeItem","history","user_login","circular","inverted","Menu","useFormInput","initialValue","useState","setValue","LoginForm","username","password","textAlign","style","height","verticalAlign","maxWidth","Image","marginRight","marginLeft","size","stacked","iconPosition","token","organisasi","Token","User","Organizations","setItem","stringify","Access","NoPage","Boolean","hostname","match","PrivateRoute","component","rest","render","from","PublicRoute","routing","exact","path","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d91a91be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/upload-photo.fecd348b.jpg\";","import logo from '../../picture/logo.PNG';\r\nimport { Grid, List } from 'semantic-ui-react';\r\nimport React from 'react';\r\n\r\nfunction Sidebar() {\r\n    return (\r\n        <Grid centered>\r\n            <Grid.Row className=\"add-five-margin-top\">\r\n                <Grid.Column width=\"8\">\r\n                    <img src={logo}></img>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column width=\"12\">\r\n                    <List relaxed>\r\n                        <List.Item icon=\"home\" content=\"Org Management\" />\r\n                        <List.Item icon=\"users\" content=\"User Management\" />\r\n                        <List.Item icon=\"users\" content=\"Event\" />\r\n                        <List.Item icon=\"users\" content=\"Corporate Contact\" />\r\n                        <List.Item icon=\"users\" content=\"My Contact\" />\r\n                    </List>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","export const urlAPI = \"https://apistaging.linikerja.id/\";\r\n\r\nexport const getUser = () => {\r\n  const userStr = localStorage.getItem('user');\r\n  if (userStr) return JSON.parse(userStr);\r\n  else return null;\r\n}\r\n\r\n// return the token from the session storage\r\nexport const getToken = () => {\r\n  return localStorage.getItem('token') || null;\r\n}\r\n\r\n// remove the token and user from the session storage\r\nexport const removeUserSession = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('user');\r\n  localStorage.removeItem('orgLogin');\r\n  localStorage.removeItem('orgName');\r\n  localStorage.removeItem('token-access');\r\n}\r\n\r\n// set the token and user from the session storage\r\nexport const setUserSession = (token, user, organisasi) => {\r\n  localStorage.setItem('token', token);\r\n  localStorage.setItem('user', JSON.stringify(user));\r\n  localStorage.setItem('orgLogin', organisasi.UID);\r\n  localStorage.setItem('orgName', organisasi.Title);\r\n  localStorage.setItem('token-access', token.Access);\r\n}\r\n\r\n// View Use","import photos from '../../picture/upload-photo.jpg';\r\nimport { Button, Grid, Segment, Header, Form, Checkbox, Dropdown } from 'semantic-ui-react';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport { urlAPI } from '../utils/API';\r\n\r\nclass CreateUser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const urlparameter = window.location.search;\r\n    const params = new URLSearchParams(urlparameter);\r\n    console.log(params.get(\"code\"))\r\n    this.state = {\r\n      code: params.get('code'),\r\n      contactListAPI: [],\r\n      contactList: [],\r\n      get_done: false,\r\n      get_done_user: false,\r\n      previous_uid: \"\",\r\n      email: \"\",\r\n      fullname: \"\",\r\n      corporate: \"\",\r\n      jobrole: false,\r\n      is_active: null,\r\n      dataUser: {},\r\n      roleList: [\r\n        { key: 'Ya', value: true, text: 'Ya' },\r\n        { key: 'Bukan', value: false, text: 'Bukan' },\r\n      ]\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n\r\n  // Get Contact Data\r\n  GetContact() {\r\n    axios.get(\r\n      urlAPI + \"restricted/orgs/\" + localStorage.getItem('orgLogin') + \"/contacts\",\r\n      {\r\n        headers:\r\n          { Authorization: \"Bearer \" + localStorage.getItem('token-access') }\r\n      })\r\n      .then(json => {\r\n        this.state.contactListAPI = [json.data.Data]\r\n        this.state.contactListAPI.map(contact => {\r\n          if (this.state.previous_uid !== contact.UID) {\r\n            this.state.contactList.push({\r\n              key: contact.UID,\r\n              value: contact.UID,\r\n              text: contact.Title,\r\n            })\r\n            this.state.previous_uid = contact.UID\r\n          }\r\n        })\r\n        this.state.get_done = true\r\n      })\r\n  }\r\n\r\n  // Get User Data\r\n  GetUserData() {\r\n    setTimeout(function () { //Start the timer\r\n      axios.get(\r\n        urlAPI + \"restricted/orgs/\" + localStorage.getItem('orgLogin') + \"/users/\" + this.state.code,\r\n        {\r\n          headers:\r\n            { Authorization: \"Bearer \" + localStorage.getItem('token-access') }\r\n        })\r\n        .then(response => {\r\n          this.setState({\r\n            dataUser: response.data.Data,\r\n            get_done_user: true,\r\n            email: response.data.Data.Email,\r\n            fullname: response.data.Data.FullName,\r\n            jobrole: response.data.Data.IsAdministrator,\r\n            corporate: localStorage.getItem(\"orgLogin\"),\r\n            is_active: response.data.Data.IsActive\r\n          })\r\n        })\r\n    }.bind(this), 300)\r\n  }\r\n\r\n  // Proses Save\r\n  handleSubmit() {\r\n    const inputDataUser = {\r\n      FullName: this.state.fullname,\r\n      Email: this.state.email,\r\n      IsAdministrator: this.state.jobrole,\r\n      IsActive: this.state.is_active,\r\n      OrganizationUID: this.state.corporate,\r\n      Username: this.state.email,\r\n      NickName: this.state.fullname.substring(0, 4),\r\n      Picture: \"foto.png\",\r\n      Status: \"\",\r\n      IsOnline: false,\r\n      IsIdle: false,\r\n      IsOnCall: false,\r\n      LastOnlineAt: \"0001-01-01T00:00:00Z\"\r\n    }\r\n\r\n    if (window.location.pathname === \"/create\") {\r\n      axios.post(\r\n        urlAPI + \"restricted/orgs/\" + localStorage.getItem('orgLogin') + \"/users\", inputDataUser,\r\n        {\r\n          headers:\r\n            { Authorization: \"Bearer \" + localStorage.getItem('token-access') }\r\n        })\r\n    } else if (window.location.pathname === \"/edit\") {\r\n      axios.put(\r\n        urlAPI + \"restricted/orgs/\" + localStorage.getItem('orgLogin') + \"/users/\" + this.state.code, inputDataUser,\r\n        {\r\n          headers:\r\n            { Authorization: \"Bearer \" + localStorage.getItem('token-access') }\r\n        })\r\n    }\r\n    setTimeout(function () {\r\n      window.location.replace(\"/\");\r\n    }.bind(this), 400)\r\n  }\r\n\r\n  handleChange(event) {\r\n    if (event.target.id === \"user_email\") {\r\n      this.setState({\r\n        email: event.target.value\r\n      });\r\n    } else if (event.target.id === \"fullname\") {\r\n      this.setState({\r\n        fullname: event.target.value\r\n      });\r\n    } else if (event.target.id === \"is_active\") {\r\n      this.setState({\r\n        is_active: !this.state.is_active\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChangeRole = (e, { value }) => {\r\n    e.persist();\r\n    this.setState({\r\n      jobrole: value\r\n    });\r\n  };\r\n\r\n  handleChangeContact = (e, { value }) => {\r\n    e.persist();\r\n    this.setState({\r\n      corporate: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.get_done === false) {\r\n      this.GetContact();\r\n    }\r\n    if (this.state.get_done_user === false && window.location.pathname === \"/edit\") {\r\n      this.GetUserData();\r\n    }\r\n    return (\r\n      <Segment>\r\n        <Grid centered>\r\n          <Grid.Column width=\"14\">\r\n            <Grid>\r\n              <Grid.Row className=\"add-five-margin-top\">\r\n                <Grid.Column width=\"9\" floated=\"left\">\r\n                  <Header as=\"h1\">{(window.location.pathname === \"/create\") ? \"Add\" : \"Edit\"} User</Header>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row className=\"add-eight-padding-top\">\r\n                <Grid.Column>\r\n                  <Grid>\r\n                    <Grid.Column width=\"10\">\r\n                      <Form onSubmit={this.handleSubmit}>\r\n                        <Form.Field>\r\n                          <Grid>\r\n                            <Grid.Column width=\"12\">\r\n                              <label>Email *</label>\r\n                              <input\r\n                                id=\"user_email\"\r\n                                placeholder=\"Enter user company email\"\r\n                                onChange={this.handleChange}\r\n                                value={this.state.email}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column width=\"4\">\r\n                              <label>Sync LDAP</label><br />\r\n                              <Checkbox toggle />\r\n                            </Grid.Column>\r\n                          </Grid>\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>Full Name *</label>\r\n                          <input\r\n                            id=\"fullname\"\r\n                            placeholder='Enter fullname'\r\n                            onChange={this.handleChange}\r\n                            value={this.state.fullname}\r\n                          />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <label>Corporate Contact</label>\r\n                          <Dropdown\r\n                            id=\"corporate_contact\"\r\n                            placeholder='Choose Corporate Contact'\r\n                            fluid\r\n                            search\r\n                            selection\r\n                            options={this.state.contactList}\r\n                            onChange={this.handleChangeContact}\r\n                            value={this.state.corporate}\r\n                          />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                          <Grid>\r\n                            <Grid.Column width=\"8\">\r\n                              <label>Admin</label>\r\n                              <Dropdown\r\n                                id=\"role\"\r\n                                placeholder='Choose Role'\r\n                                fluid\r\n                                search\r\n                                selection\r\n                                options={this.state.roleList}\r\n                                onChange={this.handleChangeRole}\r\n                                value={this.state.jobrole}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column width=\"8\">\r\n                              <label>Active Status</label><br />\r\n                              <Checkbox\r\n                                toggle id=\"is_active\"\r\n                                onChange={this.handleChange}\r\n                                checked={this.state.is_active}\r\n                              />\r\n                            </Grid.Column>\r\n                          </Grid>\r\n                        </Form.Field>\r\n                        <Button type='submit'>Save</Button>\r\n                      </Form>\r\n                    </Grid.Column>\r\n                    <Grid.Column>\r\n                      <Grid centered>\r\n                        <Grid.Column width=\"8\">\r\n                          <img src={photos} />\r\n                        </Grid.Column>\r\n                      </Grid>\r\n                    </Grid.Column>\r\n                  </Grid>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment >\r\n    );\r\n  };\r\n}\r\n\r\nexport default CreateUser;","import { Table, Button, Grid, Segment, Input, Header, Icon } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { urlAPI } from \"../utils/API\";\r\nimport axios from \"axios\";\r\n\r\nclass Container extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user_list: [],\r\n      get_done: false,\r\n      search_item: \"\",\r\n      arah_sort: null,\r\n      column_sort: null\r\n    };\r\n    this.handleSort = this.handleSort.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    let user_keyword = \"/users\"\r\n    if (this.state.search_item != \"\" && this.state.search_item != null && this.state.search_item != 0) {\r\n      user_keyword += \"?keyword=\" + this.state.search_item\r\n    }\r\n    console.log(urlAPI + \"restricted/orgs/\" + localStorage.getItem('orgLogin') + user_keyword)\r\n    axios.get(\r\n      urlAPI + \"restricted/orgs/\" + localStorage.getItem('orgLogin') + user_keyword,\r\n      {\r\n        headers:\r\n          { Authorization: \"Bearer \" + localStorage.getItem('token-access') }\r\n      })\r\n      .then(res => {\r\n        this.setState({\r\n          user_list: res.data.Data\r\n        })\r\n      })\r\n    this.state.get_done = true\r\n  }\r\n\r\n  handleSort(event, sortKey) {\r\n    let { user_list, column_sort, arah_sort } = this.state;\r\n    if (this.state.column_sort === null || this.state.column_sort !== sortKey) {\r\n      user_list.sort((a, b) => a[sortKey].localeCompare(b[sortKey]))\r\n      column_sort = sortKey\r\n      arah_sort = \"up\"\r\n    } else {\r\n      user_list.reverse();\r\n      arah_sort = ((this.state.arah_sort === \"up\") ? \"down\" : \"up\");\r\n    }\r\n    this.setState({\r\n      user_list: user_list,\r\n      column_sort: column_sort,\r\n      arah_sort: arah_sort\r\n    })\r\n  }\r\n\r\n  handleClick = userUId => {\r\n    axios.delete(\r\n      urlAPI + \"restricted/orgs/\" + localStorage.getItem('orgLogin') + \"/users/\" + userUId,\r\n      {\r\n        headers:\r\n          { Authorization: \"Bearer \" + localStorage.getItem('token-access') }\r\n      })\r\n    setTimeout(function () { //Start the timer\r\n      window.location.reload()\r\n    }.bind(this), 400)\r\n  }\r\n\r\n  handlechange = () => {\r\n    this.state.search_item = document.getElementById(\"user_keyword\").value\r\n    this.componentDidMount()\r\n  }\r\n\r\n  render() {\r\n    if (this.state.get_done === false) {\r\n      this.componentDidMount();\r\n    }\r\n    return (\r\n      <Segment>\r\n        <Grid centered>\r\n          <Grid.Column width=\"14\">\r\n            <Grid>\r\n              <Grid.Row className=\"add-five-margin-top\">\r\n                <Grid.Column width=\"9\" floated=\"left\">\r\n                  <Header as=\"h1\">User List</Header>\r\n                </Grid.Column>\r\n                <Grid.Column width=\"7\" floated=\"right\">\r\n                  <Grid>\r\n                    <Grid.Column width=\"10\" className=\"fluid\">\r\n                      <Input icon=\"search\" placeholder=\"Masukan username\" id=\"user_keyword\" onChange={this.handlechange} />\r\n                    </Grid.Column>\r\n                    <Grid.Column width=\"6\">\r\n                      <Link to=\"/create\">\r\n                        <Button content=\"Add User\" className=\"fluid green-button\" />\r\n                      </Link>\r\n                    </Grid.Column>\r\n                  </Grid>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n              <Grid.Row className=\"add-eight-padding-top\">\r\n                <Grid.Column>\r\n                  <Table>\r\n                    <Table.Header className=\"add-five-padding-top\">\r\n                      <Table.Row>\r\n                        <Table.HeaderCell onClick={e => this.handleSort(e, 'FullName')}>\r\n                          <Grid columns='equal'>\r\n                            <Grid.Column>\r\n                              Nama\r\n                            </Grid.Column>\r\n                            <Grid.Column width={2}>\r\n                              <Icon name={(this.state.column_sort !== \"FullName\") ? \"sort\" : ((this.state.arah_sort === \"up\") ? \"sort ascending\" : \"sort descending\")} />\r\n                            </Grid.Column>\r\n                          </Grid>\r\n                        </Table.HeaderCell>\r\n                        <Table.HeaderCell onClick={e => this.handleSort(e, 'Username')}>\r\n                          <Grid columns='equal'>\r\n                            <Grid.Column>\r\n                              Username\r\n                            </Grid.Column>\r\n                            <Grid.Column width={2}>\r\n                              <Icon name={(this.state.column_sort !== \"Username\") ? \"sort\" : ((this.state.arah_sort === \"up\") ? \"sort ascending\" : \"sort descending\")} />\r\n                            </Grid.Column>\r\n                          </Grid>\r\n                        </Table.HeaderCell>\r\n                        <Table.HeaderCell onClick={e => this.handleSort(e, 'Email')}>\r\n                          <Grid columns='equal'>\r\n                            <Grid.Column>\r\n                              Email\r\n                            </Grid.Column>\r\n                            <Grid.Column width={2}>\r\n                              <Icon name={(this.state.column_sort !== \"Email\") ? \"sort\" : ((this.state.arah_sort === \"up\") ? \"sort ascending\" : \"sort descending\")} />\r\n                            </Grid.Column>\r\n                          </Grid>\r\n                        </Table.HeaderCell>\r\n                        <Table.HeaderCell>Admin</Table.HeaderCell>\r\n                        <Table.HeaderCell>Status</Table.HeaderCell>\r\n                        <Table.HeaderCell></Table.HeaderCell>\r\n                      </Table.Row>\r\n                    </Table.Header>\r\n                    <Table.Body>\r\n                      {\r\n                        this.state.user_list.map(user => {\r\n                          return (\r\n                            < Table.Row >\r\n                              <Table.Cell>{user.FullName}</Table.Cell>\r\n                              <Table.Cell>{user.Username}</Table.Cell>\r\n                              <Table.Cell>{user.Email}</Table.Cell>\r\n                              {\r\n                                (user.IsAdministrator)\r\n                                  ? <Table.Cell><font color=\"green\">Ya</font></Table.Cell>\r\n                                  : <Table.Cell><font color=\"red\">Bukan</font></Table.Cell>\r\n                              }\r\n                              {\r\n                                (user.IsActive)\r\n                                  ? <Table.Cell><font color=\"green\">Ya</font></Table.Cell>\r\n                                  : <Table.Cell><font color=\"red\">Tidak</font></Table.Cell>\r\n                              }\r\n                              <Table.Cell>\r\n                                <Link to={\"/edit?code=\" + user.UID}>\r\n                                  <Button className=\"fluid green-button\">Edit</Button>\r\n                                </Link>\r\n                                <br />\r\n                                <Button className=\"fluid\" color=\"red\" onClick={() => { this.handleClick(user.UID) }} >Hapus</Button>\r\n                              </Table.Cell>\r\n                            </Table.Row>\r\n                          )\r\n                        })\r\n                      }\r\n                    </Table.Body>\r\n                  </Table>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment >\r\n    );\r\n  }\r\n}\r\n\r\nexport default Container;","import React from 'react';\r\nimport CreateUser from '../user_management/create.js'\r\nimport Container from '../user_management/view.js'\r\n\r\nfunction Content() {\r\n    if (window.location.pathname === \"/create\" || window.location.pathname === \"/edit\") {\r\n        return (<CreateUser />)\r\n    } else {\r\n        return (<Container />)\r\n    }\r\n}\r\n\r\nexport default Content;","import React from 'react';\nimport { Grid, Dropdown, Icon } from 'semantic-ui-react';\n\nimport Sidebar from './layout/sidebar';\nimport Content from './layout/content';\n\nimport { removeUserSession, getUser } from \"./utils/API\";\n\nclass Application extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user_login: getUser(),\n    };\n  }\n\n  handleLogout = () => {\n    removeUserSession();\n    this.props.history.push('/login');\n  }\n\n  render() {\n    return (\n      <Grid className=\"no-padding\">\n\n        <Grid.Row className=\"no-padding no-margin\">\n          <Grid.Column width=\"16\" className=\"app-headbar\">\n            <div>\n              <Grid centered>\n                <Grid.Column width=\"4\" floated=\"right\" className=\"add-five-margin-top add-two-margin-bottom\">\n                  <span>\n                    <Icon circular inverted name='users' />\n                    <Dropdown text={localStorage.getItem('orgName')} className=\"white-text\">\n                      <Dropdown.Menu>\n                        <Dropdown.Item text=' ' />\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </span>\n                  &nbsp;&nbsp;&nbsp;&nbsp;\n                  <span>\n                    <Icon circular inverted name='users' />\n                    <Dropdown text={this.state.user_login.FullName} className=\"white-text\">\n                      <Dropdown.Menu>\n                        <Dropdown.Item text='Logout' onClick={this.handleLogout} />\n                      </Dropdown.Menu>\n                    </Dropdown>\n                  </span>\n                </Grid.Column>\n              </Grid>\n            </div>\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row columns=\"equal\" className=\"no-padding no-margin\">\n          <Grid.Column width=\"3\" className=\"app-sidebar\">\n            <Sidebar />\n          </Grid.Column>\n          <Grid.Column className=\"add-ten-padding-top app-content\">\n            <Grid centered>\n              <Grid.Column width=\"14\">\n                <Content />\n              </Grid.Column>\n            </Grid>\n          </Grid.Column>\n        </Grid.Row>\n\n      </Grid>\n    );\n  }\n}\n\nexport default Application;","import React, { useState } from 'react';\r\nimport logo from '../../picture/logo.PNG';\r\nimport axios from 'axios';\r\nimport { setUserSession, urlAPI } from '../utils/API';\r\nimport { Button, Form, Grid, Segment, Image } from 'semantic-ui-react'\r\n\r\nfunction LoginForm(props) {\r\n  const username = useFormInput('');\r\n  const password = useFormInput('');\r\n\r\n  const handleLogin = () => {\r\n    axios.post(\r\n      urlAPI + \"public/auth/login\", {\r\n      username: username.value,\r\n      password: password.value\r\n    })\r\n      .then(response => {\r\n        console.log(response);\r\n        setUserSession(response.data.Data.Token, response.data.Data.User, response.data.Data.Organizations[0]);\r\n        props.history.push('/');\r\n      });\r\n\r\n    setTimeout(function () { //Start the timer\r\n      props.history.push('/');\r\n    }.bind(this), 400)\r\n  }\r\n\r\n  return (\r\n    <Grid textAlign='center' style={{ height: '85vh' }} verticalAlign='middle'>\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Image src={logo} textAlign='center' style={{ marginRight: \"auto\", marginLeft: \"auto\" }} />\r\n        <br />\r\n        <Form size='large'>\r\n          <Segment stacked>\r\n            <Form.Input fluid icon='user' {...username} iconPosition='left' placeholder='E-mail address' />\r\n            <Form.Input\r\n              fluid\r\n              icon='lock'\r\n              iconPosition='left'\r\n              placeholder='Password'\r\n              type='password'\r\n              {...password}\r\n            />\r\n            <Button color='teal'\r\n              fluid size='large'\r\n              value='Login'\r\n              onClick={handleLogin}\r\n            >\r\n              Login\r\n            </Button>\r\n          </Segment>\r\n        </Form>\r\n      </Grid.Column>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nconst useFormInput = initialValue => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  const handleChange = e => {\r\n    setValue(e.target.value);\r\n  }\r\n  return {\r\n    value,\r\n    onChange: handleChange\r\n  }\r\n}\r\n\r\nexport default LoginForm","import React from 'react';\r\nimport logo from '../../picture/logo.PNG';\r\nimport { Grid, Image } from 'semantic-ui-react'\r\n\r\nfunction NoPage() {\r\n  return (\r\n    <Grid textAlign='center' style={{ height: '85vh' }} verticalAlign='middle'>\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Image src={logo} textAlign='center' style={{ marginRight: \"auto\", marginLeft: \"auto\" }} />\r\n        <br />\r\n        <h2 className=\"white\">404 Not Found</h2>\r\n      </Grid.Column>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default NoPage","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getToken } from './API';\r\n\r\n// handle the private routes\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => getToken() ? <Component {...props} /> : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\r\n    />\r\n  )\r\n}\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getToken } from './API';\r\n\r\n// handle the public routes\r\nfunction PublicRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => !getToken() ? <Component {...props} /> : <Redirect to={{ pathname: '/' }} />}\r\n    />\r\n  )\r\n}\r\n\r\nexport default PublicRoute;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport './css/index.scss';\nimport Application from './js/App.js';\nimport LoginForm from './js/login_page/login';\nimport NoPage from './js/nopage/nopage';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport PrivateRoute from './js/utils/private_route';\nimport PublicRoute from './js/utils/public_route';\n\n\nconst routing = (\n  <BrowserRouter>\n    <div>\n      <div>\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={Application} />\n          <PrivateRoute path=\"/create\" component={Application} />\n          <PrivateRoute path=\"/edit\" component={Application} />\n          <PublicRoute path=\"/login\" component={LoginForm} />\n          <Route component={NoPage} />\n        </Switch>\n      </div>\n    </div>\n  </BrowserRouter>\n)\n\nReactDOM.render(routing, document.getElementById('root'));\n\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/logo.ff26501f.PNG\";"],"sourceRoot":""}